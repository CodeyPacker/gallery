{"version":3,"sources":["scripts/gallery.js"],"names":["Gallery","gallery","Error","images","Array","from","querySelectorAll","modal","document","querySelector","prevButton","nextButton","showNextImage","bind","showPrevImage","handleKeyUp","handleClickOutside","forEach","image","addEventListener","e","showImage","currentTarget","key","prototype","openModal","matches","classList","add","window","closeModal","remove","removeEventListener","target","currentImage","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","el","src","textContent","title","dataset","description","console","info","gallery1","gallery2"],"mappings":";AAAA,SAASA,EAAQC,GAAS,IAAA,EAAA,KACpB,IAACA,EACG,MAAA,IAAIC,MAAM,sBAGbD,KAAAA,QAAUA,EAGVE,KAAAA,OAASC,MAAMC,KAAKJ,EAAQK,iBAAiB,QAC7CC,KAAAA,MAAQC,SAASC,cAAc,UAC/BC,KAAAA,WAAa,KAAKH,MAAME,cAAc,SACtCE,KAAAA,WAAa,KAAKJ,MAAME,cAAc,SAItCG,KAAAA,cAAgB,KAAKA,cAAcC,KAAK,MACxCC,KAAAA,cAAgB,KAAKA,cAAcD,KAAK,MACxCE,KAAAA,YAAc,KAAKA,YAAYF,KAAK,MACpCG,KAAAA,mBAAqB,KAAKA,mBAAmBH,KAAK,MAGlDV,KAAAA,OAAOc,QAAQ,SAAAC,GAASA,OAAAA,EAAMC,iBAAiB,QAAS,SAAAC,GAAK,OAAA,EAAKC,UAAUD,EAAEE,mBAE9EnB,KAAAA,OAAOc,QAAQ,SAAAC,GAClBA,EAAMC,iBAAiB,QAAS,SAAAC,GACjB,UAAVA,EAAEG,KACH,EAAKF,UAAUD,EAAEE,mBAKlBf,KAAAA,MAAMY,iBAAiB,QAAS,KAAKH,oBAG5ChB,EAAQwB,UAAUC,UAAY,WAExB,KAAKlB,MAAMmB,QAAQ,WAIlBnB,KAAAA,MAAMoB,UAAUC,IAAI,QAGzBC,OAAOV,iBAAiB,QAAS,KAAKJ,aACjCJ,KAAAA,WAAWQ,iBAAiB,QAAS,KAAKP,eAC1CF,KAAAA,WAAWS,iBAAiB,QAAS,KAAKL,iBAGjDd,EAAQwB,UAAUM,WAAa,WACxBvB,KAAAA,MAAMoB,UAAUI,OAAO,QAE5BF,OAAOG,oBAAoB,QAAS,KAAKjB,aACpCJ,KAAAA,WAAWqB,oBAAoB,QAAS,KAAKpB,eAC7CF,KAAAA,WAAWsB,oBAAoB,QAAS,KAAKlB,gBAGpDd,EAAQwB,UAAUR,mBAAqB,SAASI,GAC1CA,EAAEa,SAAWb,EAAEE,eACZQ,KAAAA,cAIT9B,EAAQwB,UAAUT,YAAc,SAASK,GAEnCA,MAAU,WAAVA,EAAEG,IAAyB,KAAKO,aACtB,eAAVV,EAAEG,IAA6B,KAAKX,gBAC1B,cAAVQ,EAAEG,IAA4B,KAAKT,qBAAnCM,GAGNpB,EAAQwB,UAAUZ,cAAgB,WAE3BS,KAAAA,UAAU,KAAKa,aAAaC,oBAC/B,KAAKlC,QAAQmC,oBAGjBpC,EAAQwB,UAAUV,cAAgB,WAC3BO,KAAAA,UAAU,KAAKa,aAAaG,wBAC/B,KAAKpC,QAAQqC,mBAGjBtC,EAAQwB,UAAUH,UAAY,SAASkB,GAChCA,GAMAhC,KAAAA,MAAME,cAAc,OAAO+B,IAAMD,EAAGC,IACpCjC,KAAAA,MAAME,cAAc,MAAMgC,YAAcF,EAAGG,MAC3CnC,KAAAA,MAAME,cAAc,YAAYgC,YAAcF,EAAGI,QAAQC,YACzDV,KAAAA,aAAeK,EACfd,KAAAA,aATHoB,QAAQC,KAAK,qBAYjB,IAAMC,EAAW,IAAI/C,EAAQQ,SAASC,cAAc,cAC9CuC,EAAW,IAAIhD,EAAQQ,SAASC,cAAc","file":"gallery.5388d307.js","sourceRoot":"..","sourcesContent":["function Gallery(gallery) {\n  if (!gallery) {\n    throw new Error('Gallery not found!');\n  }\n\n  this.gallery = gallery;\n\n  // select the elements I need\n  this.images = Array.from(gallery.querySelectorAll('img'));\n  this.modal = document.querySelector('.modal');\n  this.prevButton = this.modal.querySelector('.prev');\n  this.nextButton = this.modal.querySelector('.next');\n\n  // Bind the methods to the instance when I need them\n  // These need to have access to 'this'\n  this.showNextImage = this.showNextImage.bind(this);\n  this.showPrevImage = this.showPrevImage.bind(this);\n  this.handleKeyUp = this.handleKeyUp.bind(this);\n  this.handleClickOutside = this.handleClickOutside.bind(this);\n\n  // All event listeners\n  this.images.forEach(image => image.addEventListener('click', e => this.showImage(e.currentTarget)));\n\n  this.images.forEach(image => {\n    image.addEventListener('keyup', e => {\n      if(e.key === 'Enter') {\n        this.showImage(e.currentTarget);\n      }\n    });\n  });\n\n  this.modal.addEventListener('click', this.handleClickOutside);\n}\n\nGallery.prototype.openModal = function() {\n  // first check if modal is already open\n  if (this.modal.matches('.open')) {\n    return; // stop function from running\n  }\n\n  this.modal.classList.add('open');\n\n  // Event listeners to be bound when modal is opened\n  window.addEventListener('keyup', this.handleKeyUp);\n  this.nextButton.addEventListener('click', this.showNextImage);\n  this.prevButton.addEventListener('click', this.showPrevImage);\n}\n\nGallery.prototype.closeModal = function() {\n  this.modal.classList.remove('open');\n  // cleanup listeners. these only need to exist when a modal is open\n  window.removeEventListener('keyup', this.handleKeyUp);\n  this.nextButton.removeEventListener('click', this.showNextImage);\n  this.prevButton.removeEventListener('click', this.showPrevImage);\n}\n\nGallery.prototype.handleClickOutside = function(e) {\n  if (e.target === e.currentTarget) {\n    this.closeModal();\n  }\n}\n\nGallery.prototype.handleKeyUp = function(e) {\n  // adding a return prevents the function from checking each key\n  if (e.key === 'Escape') return this.closeModal();\n  if (e.key === 'ArrowRight') return this.showNextImage();\n  if (e.key === 'ArrowLeft') return this.showPrevImage();\n}\n\nGallery.prototype.showNextImage = function() {\n  // If there are no more images, go back to the first image\n  this.showImage(this.currentImage.nextElementSibling ||\n    this.gallery.firstElementChild);\n}\n\nGallery.prototype.showPrevImage = function() {\n  this.showImage(this.currentImage.previousElementSibling ||\n    this.gallery.lastElementChild);\n}\n\nGallery.prototype.showImage = function(el) {\n  if (!el) { // safety net\n    console.info('no image to show');\n    return;\n  }\n\n  // update the modal with this info\n  this.modal.querySelector('img').src = el.src;\n  this.modal.querySelector('h2').textContent = el.title;\n  this.modal.querySelector('figure p').textContent = el.dataset.description;\n  this.currentImage = el;\n  this.openModal();\n}\n\nconst gallery1 = new Gallery(document.querySelector('.gallery1'));\nconst gallery2 = new Gallery(document.querySelector('.gallery2'));"]}